# Generated by Django 5.2.6 on 2025-09-18 18:03

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("character", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Item",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField()),
                ("emoji", models.CharField(help_text="Ex: üó°Ô∏è ou ü™µ", max_length=5)),
                ("drop_chance", models.FloatField(default=0.0)),
                (
                    "rarity",
                    models.CharField(
                        choices=[
                            ("common", "Comum"),
                            ("rare", "Raro"),
                            ("epic", "√âpico"),
                            ("legendary", "Lend√°rio"),
                        ],
                        default="common",
                        max_length=20,
                    ),
                ),
                (
                    "item_type",
                    models.CharField(
                        choices=[
                            ("material", "Material"),
                            ("equipment", "Equipamento"),
                            ("consumable", "Consum√≠vel"),
                        ],
                        max_length=20,
                    ),
                ),
            ],
            options={
                "verbose_name": "Item",
                "verbose_name_plural": "Itens",
            },
        ),
        migrations.CreateModel(
            name="Equipment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "min_level",
                    models.PositiveIntegerField(
                        default=1,
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                ("attribute_bonuses", models.JSONField(blank=True, default=dict)),
                (
                    "combat_skill",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "passive_skill",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("recipe", models.JSONField(blank=True, default=list, null=True)),
                (
                    "item",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="equipment",
                        to="items.item",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Consumable",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "min_level",
                    models.PositiveIntegerField(
                        default=1,
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                ("affected_attributes", models.JSONField(blank=True, null=True)),
                ("attribute_bonuses", models.JSONField(blank=True, null=True)),
                ("crafting_recipe", models.JSONField(blank=True, null=True)),
                (
                    "item",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="consumable",
                        to="items.item",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Material",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("crafting_recipe", models.JSONField(blank=True, null=True)),
                (
                    "item",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="material",
                        to="items.item",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="InventoryItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quantity",
                    models.PositiveIntegerField(
                        default=1,
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                (
                    "character",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="inventory",
                        to="character.character",
                    ),
                ),
                (
                    "item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="items.item"
                    ),
                ),
            ],
            options={
                "verbose_name": "Item do Invent√°rio",
                "verbose_name_plural": "Invent√°rio",
                "unique_together": {("character", "item")},
            },
        ),
    ]
